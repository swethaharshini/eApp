/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rknowsys.eapp.hrm.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Documents service. Represents a row in the &quot;documents&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.rknowsys.eapp.hrm.model.impl.DocumentsModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.rknowsys.eapp.hrm.model.impl.DocumentsImpl}.
 * </p>
 *
 * @author rknowsys
 * @see Documents
 * @see com.rknowsys.eapp.hrm.model.impl.DocumentsImpl
 * @see com.rknowsys.eapp.hrm.model.impl.DocumentsModelImpl
 * @generated
 */
public interface DocumentsModel extends BaseModel<Documents> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a documents model instance should use the {@link Documents} interface instead.
	 */

	/**
	 * Returns the primary key of this documents.
	 *
	 * @return the primary key of this documents
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this documents.
	 *
	 * @param primaryKey the primary key of this documents
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the document ID of this documents.
	 *
	 * @return the document ID of this documents
	 */
	public long getDocumentId();

	/**
	 * Sets the document ID of this documents.
	 *
	 * @param documentId the document ID of this documents
	 */
	public void setDocumentId(long documentId);

	/**
	 * Returns the company ID of this documents.
	 *
	 * @return the company ID of this documents
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this documents.
	 *
	 * @param companyId the company ID of this documents
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the group ID of this documents.
	 *
	 * @return the group ID of this documents
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this documents.
	 *
	 * @param groupId the group ID of this documents
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the create date of this documents.
	 *
	 * @return the create date of this documents
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this documents.
	 *
	 * @param createDate the create date of this documents
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this documents.
	 *
	 * @return the modified date of this documents
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this documents.
	 *
	 * @param modifiedDate the modified date of this documents
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the user ID of this documents.
	 *
	 * @return the user ID of this documents
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this documents.
	 *
	 * @param userId the user ID of this documents
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this documents.
	 *
	 * @return the user uuid of this documents
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this documents.
	 *
	 * @param userUuid the user uuid of this documents
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the topic of this documents.
	 *
	 * @return the topic of this documents
	 */
	@AutoEscape
	public String getTopic();

	/**
	 * Sets the topic of this documents.
	 *
	 * @param topic the topic of this documents
	 */
	public void setTopic(String topic);

	/**
	 * Returns the category of this documents.
	 *
	 * @return the category of this documents
	 */
	@AutoEscape
	public String getCategory();

	/**
	 * Sets the category of this documents.
	 *
	 * @param category the category of this documents
	 */
	public void setCategory(String category);

	/**
	 * Returns the description of this documents.
	 *
	 * @return the description of this documents
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this documents.
	 *
	 * @param description the description of this documents
	 */
	public void setDescription(String description);

	/**
	 * Returns the publish date of this documents.
	 *
	 * @return the publish date of this documents
	 */
	public Date getPublishDate();

	/**
	 * Sets the publish date of this documents.
	 *
	 * @param publishDate the publish date of this documents
	 */
	public void setPublishDate(Date publishDate);

	/**
	 * Returns the status of this documents.
	 *
	 * @return the status of this documents
	 */
	public boolean getStatus();

	/**
	 * Returns <code>true</code> if this documents is status.
	 *
	 * @return <code>true</code> if this documents is status; <code>false</code> otherwise
	 */
	public boolean isStatus();

	/**
	 * Sets whether this documents is status.
	 *
	 * @param status the status of this documents
	 */
	public void setStatus(boolean status);

	/**
	 * Returns the admin of this documents.
	 *
	 * @return the admin of this documents
	 */
	public boolean getAdmin();

	/**
	 * Returns <code>true</code> if this documents is admin.
	 *
	 * @return <code>true</code> if this documents is admin; <code>false</code> otherwise
	 */
	public boolean isAdmin();

	/**
	 * Sets whether this documents is admin.
	 *
	 * @param admin the admin of this documents
	 */
	public void setAdmin(boolean admin);

	/**
	 * Returns the supervisor of this documents.
	 *
	 * @return the supervisor of this documents
	 */
	public boolean getSupervisor();

	/**
	 * Returns <code>true</code> if this documents is supervisor.
	 *
	 * @return <code>true</code> if this documents is supervisor; <code>false</code> otherwise
	 */
	public boolean isSupervisor();

	/**
	 * Sets whether this documents is supervisor.
	 *
	 * @param supervisor the supervisor of this documents
	 */
	public void setSupervisor(boolean supervisor);

	/**
	 * Returns the all employees of this documents.
	 *
	 * @return the all employees of this documents
	 */
	public boolean getAllEmployees();

	/**
	 * Returns <code>true</code> if this documents is all employees.
	 *
	 * @return <code>true</code> if this documents is all employees; <code>false</code> otherwise
	 */
	public boolean isAllEmployees();

	/**
	 * Sets whether this documents is all employees.
	 *
	 * @param allEmployees the all employees of this documents
	 */
	public void setAllEmployees(boolean allEmployees);

	/**
	 * Returns the published to of this documents.
	 *
	 * @return the published to of this documents
	 */
	@AutoEscape
	public String getPublishedTo();

	/**
	 * Sets the published to of this documents.
	 *
	 * @param publishedTo the published to of this documents
	 */
	public void setPublishedTo(String publishedTo);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Documents documents);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Documents> toCacheModel();

	@Override
	public Documents toEscapedModel();

	@Override
	public Documents toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}