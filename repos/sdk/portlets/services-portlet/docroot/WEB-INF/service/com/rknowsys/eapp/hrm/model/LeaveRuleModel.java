/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rknowsys.eapp.hrm.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the LeaveRule service. Represents a row in the &quot;leave_rule&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.rknowsys.eapp.hrm.model.impl.LeaveRuleModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.rknowsys.eapp.hrm.model.impl.LeaveRuleImpl}.
 * </p>
 *
 * @author rknowsys
 * @see LeaveRule
 * @see com.rknowsys.eapp.hrm.model.impl.LeaveRuleImpl
 * @see com.rknowsys.eapp.hrm.model.impl.LeaveRuleModelImpl
 * @generated
 */
public interface LeaveRuleModel extends BaseModel<LeaveRule> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a leave rule model instance should use the {@link LeaveRule} interface instead.
	 */

	/**
	 * Returns the primary key of this leave rule.
	 *
	 * @return the primary key of this leave rule
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this leave rule.
	 *
	 * @param primaryKey the primary key of this leave rule
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the leave rule ID of this leave rule.
	 *
	 * @return the leave rule ID of this leave rule
	 */
	public long getLeaveRuleId();

	/**
	 * Sets the leave rule ID of this leave rule.
	 *
	 * @param leaveRuleId the leave rule ID of this leave rule
	 */
	public void setLeaveRuleId(long leaveRuleId);

	/**
	 * Returns the company ID of this leave rule.
	 *
	 * @return the company ID of this leave rule
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this leave rule.
	 *
	 * @param companyId the company ID of this leave rule
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the group ID of this leave rule.
	 *
	 * @return the group ID of this leave rule
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this leave rule.
	 *
	 * @param groupId the group ID of this leave rule
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the create date of this leave rule.
	 *
	 * @return the create date of this leave rule
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this leave rule.
	 *
	 * @param createDate the create date of this leave rule
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this leave rule.
	 *
	 * @return the modified date of this leave rule
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this leave rule.
	 *
	 * @param modifiedDate the modified date of this leave rule
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the user ID of this leave rule.
	 *
	 * @return the user ID of this leave rule
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this leave rule.
	 *
	 * @param userId the user ID of this leave rule
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this leave rule.
	 *
	 * @return the user uuid of this leave rule
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this leave rule.
	 *
	 * @param userUuid the user uuid of this leave rule
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the leave type ID of this leave rule.
	 *
	 * @return the leave type ID of this leave rule
	 */
	public long getLeaveTypeId();

	/**
	 * Sets the leave type ID of this leave rule.
	 *
	 * @param leaveTypeId the leave type ID of this leave rule
	 */
	public void setLeaveTypeId(long leaveTypeId);

	/**
	 * Returns the leave period type ID of this leave rule.
	 *
	 * @return the leave period type ID of this leave rule
	 */
	public int getLeavePeriodTypeId();

	/**
	 * Sets the leave period type ID of this leave rule.
	 *
	 * @param leavePeriodTypeId the leave period type ID of this leave rule
	 */
	public void setLeavePeriodTypeId(int leavePeriodTypeId);

	/**
	 * Returns the start month of this leave rule.
	 *
	 * @return the start month of this leave rule
	 */
	public int getStartMonth();

	/**
	 * Sets the start month of this leave rule.
	 *
	 * @param startMonth the start month of this leave rule
	 */
	public void setStartMonth(int startMonth);

	/**
	 * Returns the start day of month of this leave rule.
	 *
	 * @return the start day of month of this leave rule
	 */
	public int getStartDayOfMonth();

	/**
	 * Sets the start day of month of this leave rule.
	 *
	 * @param startDayOfMonth the start day of month of this leave rule
	 */
	public void setStartDayOfMonth(int startDayOfMonth);

	/**
	 * Returns the duration of this leave rule.
	 *
	 * @return the duration of this leave rule
	 */
	@AutoEscape
	public String getDuration();

	/**
	 * Sets the duration of this leave rule.
	 *
	 * @param duration the duration of this leave rule
	 */
	public void setDuration(String duration);

	/**
	 * Returns the if employees can apply of this leave rule.
	 *
	 * @return the if employees can apply of this leave rule
	 */
	public boolean getIfEmployeesCanApply();

	/**
	 * Returns <code>true</code> if this leave rule is if employees can apply.
	 *
	 * @return <code>true</code> if this leave rule is if employees can apply; <code>false</code> otherwise
	 */
	public boolean isIfEmployeesCanApply();

	/**
	 * Sets whether this leave rule is if employees can apply.
	 *
	 * @param ifEmployeesCanApply the if employees can apply of this leave rule
	 */
	public void setIfEmployeesCanApply(boolean ifEmployeesCanApply);

	/**
	 * Returns the if admin can assign of this leave rule.
	 *
	 * @return the if admin can assign of this leave rule
	 */
	public boolean getIfAdminCanAssign();

	/**
	 * Returns <code>true</code> if this leave rule is if admin can assign.
	 *
	 * @return <code>true</code> if this leave rule is if admin can assign; <code>false</code> otherwise
	 */
	public boolean isIfAdminCanAssign();

	/**
	 * Sets whether this leave rule is if admin can assign.
	 *
	 * @param ifAdminCanAssign the if admin can assign of this leave rule
	 */
	public void setIfAdminCanAssign(boolean ifAdminCanAssign);

	/**
	 * Returns the if admin can manage entitlements of this leave rule.
	 *
	 * @return the if admin can manage entitlements of this leave rule
	 */
	public boolean getIfAdminCanManageEntitlements();

	/**
	 * Returns <code>true</code> if this leave rule is if admin can manage entitlements.
	 *
	 * @return <code>true</code> if this leave rule is if admin can manage entitlements; <code>false</code> otherwise
	 */
	public boolean isIfAdminCanManageEntitlements();

	/**
	 * Sets whether this leave rule is if admin can manage entitlements.
	 *
	 * @param ifAdminCanManageEntitlements the if admin can manage entitlements of this leave rule
	 */
	public void setIfAdminCanManageEntitlements(
		boolean ifAdminCanManageEntitlements);

	/**
	 * Returns the if leave accruable of this leave rule.
	 *
	 * @return the if leave accruable of this leave rule
	 */
	public boolean getIfLeaveAccruable();

	/**
	 * Returns <code>true</code> if this leave rule is if leave accruable.
	 *
	 * @return <code>true</code> if this leave rule is if leave accruable; <code>false</code> otherwise
	 */
	public boolean isIfLeaveAccruable();

	/**
	 * Sets whether this leave rule is if leave accruable.
	 *
	 * @param ifLeaveAccruable the if leave accruable of this leave rule
	 */
	public void setIfLeaveAccruable(boolean ifLeaveAccruable);

	/**
	 * Returns the if carry forwardable of this leave rule.
	 *
	 * @return the if carry forwardable of this leave rule
	 */
	public boolean getIfCarryForwardable();

	/**
	 * Returns <code>true</code> if this leave rule is if carry forwardable.
	 *
	 * @return <code>true</code> if this leave rule is if carry forwardable; <code>false</code> otherwise
	 */
	public boolean isIfCarryForwardable();

	/**
	 * Sets whether this leave rule is if carry forwardable.
	 *
	 * @param ifCarryForwardable the if carry forwardable of this leave rule
	 */
	public void setIfCarryForwardable(boolean ifCarryForwardable);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(LeaveRule leaveRule);

	@Override
	public int hashCode();

	@Override
	public CacheModel<LeaveRule> toCacheModel();

	@Override
	public LeaveRule toEscapedModel();

	@Override
	public LeaveRule toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}