/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rknowsys.eapp.hrm.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rknowsys.eapp.hrm.model.EmpSkill;
import com.rknowsys.eapp.hrm.model.EmpSkillModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the EmpSkill service. Represents a row in the &quot;emp_skill&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rknowsys.eapp.hrm.model.EmpSkillModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmpSkillImpl}.
 * </p>
 *
 * @author rknowsys
 * @see EmpSkillImpl
 * @see com.rknowsys.eapp.hrm.model.EmpSkill
 * @see com.rknowsys.eapp.hrm.model.EmpSkillModel
 * @generated
 */
public class EmpSkillModelImpl extends BaseModelImpl<EmpSkill>
	implements EmpSkillModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a emp skill model instance should use the {@link com.rknowsys.eapp.hrm.model.EmpSkill} interface instead.
	 */
	public static final String TABLE_NAME = "emp_skill";
	public static final Object[][] TABLE_COLUMNS = {
			{ "empSkillId", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "userId", Types.BIGINT },
			{ "skillId", Types.BIGINT },
			{ "years", Types.VARCHAR },
			{ "comments", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table emp_skill (empSkillId LONG not null primary key,employeeId LONG,groupId LONG,companyId LONG,createDate DATE null,modifiedDate DATE null,userId LONG,skillId LONG,years VARCHAR(75) null,comments VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table emp_skill";
	public static final String ORDER_BY_JPQL = " ORDER BY empSkill.empSkillId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY emp_skill.empSkillId ASC";
	public static final String DATA_SOURCE = "hrmDataSource";
	public static final String SESSION_FACTORY = "hrmSessionFactory";
	public static final String TX_MANAGER = "hrmTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rknowsys.eapp.hrm.model.EmpSkill"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rknowsys.eapp.hrm.model.EmpSkill"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.rknowsys.eapp.hrm.model.EmpSkill"),
			true);
	public static long EMPLOYEEID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long SKILLID_COLUMN_BITMASK = 4L;
	public static long EMPSKILLID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rknowsys.eapp.hrm.model.EmpSkill"));

	public EmpSkillModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _empSkillId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmpSkillId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _empSkillId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EmpSkill.class;
	}

	@Override
	public String getModelClassName() {
		return EmpSkill.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("empSkillId", getEmpSkillId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("userId", getUserId());
		attributes.put("skillId", getSkillId());
		attributes.put("years", getYears());
		attributes.put("comments", getComments());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long empSkillId = (Long)attributes.get("empSkillId");

		if (empSkillId != null) {
			setEmpSkillId(empSkillId);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long skillId = (Long)attributes.get("skillId");

		if (skillId != null) {
			setSkillId(skillId);
		}

		String years = (String)attributes.get("years");

		if (years != null) {
			setYears(years);
		}

		String comments = (String)attributes.get("comments");

		if (comments != null) {
			setComments(comments);
		}
	}

	@Override
	public long getEmpSkillId() {
		return _empSkillId;
	}

	@Override
	public void setEmpSkillId(long empSkillId) {
		_empSkillId = empSkillId;
	}

	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_columnBitmask |= EMPLOYEEID_COLUMN_BITMASK;

		if (!_setOriginalEmployeeId) {
			_setOriginalEmployeeId = true;

			_originalEmployeeId = _employeeId;
		}

		_employeeId = employeeId;
	}

	public long getOriginalEmployeeId() {
		return _originalEmployeeId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public long getSkillId() {
		return _skillId;
	}

	@Override
	public void setSkillId(long skillId) {
		_columnBitmask |= SKILLID_COLUMN_BITMASK;

		if (!_setOriginalSkillId) {
			_setOriginalSkillId = true;

			_originalSkillId = _skillId;
		}

		_skillId = skillId;
	}

	public long getOriginalSkillId() {
		return _originalSkillId;
	}

	@Override
	public String getYears() {
		if (_years == null) {
			return StringPool.BLANK;
		}
		else {
			return _years;
		}
	}

	@Override
	public void setYears(String years) {
		_years = years;
	}

	@Override
	public String getComments() {
		if (_comments == null) {
			return StringPool.BLANK;
		}
		else {
			return _comments;
		}
	}

	@Override
	public void setComments(String comments) {
		_comments = comments;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			EmpSkill.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EmpSkill toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EmpSkill)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EmpSkillImpl empSkillImpl = new EmpSkillImpl();

		empSkillImpl.setEmpSkillId(getEmpSkillId());
		empSkillImpl.setEmployeeId(getEmployeeId());
		empSkillImpl.setGroupId(getGroupId());
		empSkillImpl.setCompanyId(getCompanyId());
		empSkillImpl.setCreateDate(getCreateDate());
		empSkillImpl.setModifiedDate(getModifiedDate());
		empSkillImpl.setUserId(getUserId());
		empSkillImpl.setSkillId(getSkillId());
		empSkillImpl.setYears(getYears());
		empSkillImpl.setComments(getComments());

		empSkillImpl.resetOriginalValues();

		return empSkillImpl;
	}

	@Override
	public int compareTo(EmpSkill empSkill) {
		long primaryKey = empSkill.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EmpSkill)) {
			return false;
		}

		EmpSkill empSkill = (EmpSkill)obj;

		long primaryKey = empSkill.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EmpSkillModelImpl empSkillModelImpl = this;

		empSkillModelImpl._originalEmployeeId = empSkillModelImpl._employeeId;

		empSkillModelImpl._setOriginalEmployeeId = false;

		empSkillModelImpl._originalGroupId = empSkillModelImpl._groupId;

		empSkillModelImpl._setOriginalGroupId = false;

		empSkillModelImpl._originalSkillId = empSkillModelImpl._skillId;

		empSkillModelImpl._setOriginalSkillId = false;

		empSkillModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EmpSkill> toCacheModel() {
		EmpSkillCacheModel empSkillCacheModel = new EmpSkillCacheModel();

		empSkillCacheModel.empSkillId = getEmpSkillId();

		empSkillCacheModel.employeeId = getEmployeeId();

		empSkillCacheModel.groupId = getGroupId();

		empSkillCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			empSkillCacheModel.createDate = createDate.getTime();
		}
		else {
			empSkillCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			empSkillCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			empSkillCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		empSkillCacheModel.userId = getUserId();

		empSkillCacheModel.skillId = getSkillId();

		empSkillCacheModel.years = getYears();

		String years = empSkillCacheModel.years;

		if ((years != null) && (years.length() == 0)) {
			empSkillCacheModel.years = null;
		}

		empSkillCacheModel.comments = getComments();

		String comments = empSkillCacheModel.comments;

		if ((comments != null) && (comments.length() == 0)) {
			empSkillCacheModel.comments = null;
		}

		return empSkillCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{empSkillId=");
		sb.append(getEmpSkillId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", skillId=");
		sb.append(getSkillId());
		sb.append(", years=");
		sb.append(getYears());
		sb.append(", comments=");
		sb.append(getComments());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.rknowsys.eapp.hrm.model.EmpSkill");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>empSkillId</column-name><column-value><![CDATA[");
		sb.append(getEmpSkillId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>skillId</column-name><column-value><![CDATA[");
		sb.append(getSkillId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>years</column-name><column-value><![CDATA[");
		sb.append(getYears());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comments</column-name><column-value><![CDATA[");
		sb.append(getComments());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EmpSkill.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EmpSkill.class
		};
	private long _empSkillId;
	private long _employeeId;
	private long _originalEmployeeId;
	private boolean _setOriginalEmployeeId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _userId;
	private String _userUuid;
	private long _skillId;
	private long _originalSkillId;
	private boolean _setOriginalSkillId;
	private String _years;
	private String _comments;
	private long _columnBitmask;
	private EmpSkill _escapedModel;
}