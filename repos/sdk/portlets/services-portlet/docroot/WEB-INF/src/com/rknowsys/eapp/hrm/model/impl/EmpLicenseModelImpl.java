/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rknowsys.eapp.hrm.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rknowsys.eapp.hrm.model.EmpLicense;
import com.rknowsys.eapp.hrm.model.EmpLicenseModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the EmpLicense service. Represents a row in the &quot;emp_license&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rknowsys.eapp.hrm.model.EmpLicenseModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmpLicenseImpl}.
 * </p>
 *
 * @author rknowsys
 * @see EmpLicenseImpl
 * @see com.rknowsys.eapp.hrm.model.EmpLicense
 * @see com.rknowsys.eapp.hrm.model.EmpLicenseModel
 * @generated
 */
public class EmpLicenseModelImpl extends BaseModelImpl<EmpLicense>
	implements EmpLicenseModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a emp license model instance should use the {@link com.rknowsys.eapp.hrm.model.EmpLicense} interface instead.
	 */
	public static final String TABLE_NAME = "emp_license";
	public static final Object[][] TABLE_COLUMNS = {
			{ "empLicenseId", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "userId", Types.BIGINT },
			{ "licenseId", Types.BIGINT },
			{ "licenseNumber", Types.VARCHAR },
			{ "issuedDate", Types.TIMESTAMP },
			{ "expiryDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table emp_license (empLicenseId LONG not null primary key,employeeId LONG,groupId LONG,companyId LONG,createDate DATE null,modifiedDate DATE null,userId LONG,licenseId LONG,licenseNumber VARCHAR(75) null,issuedDate DATE null,expiryDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table emp_license";
	public static final String ORDER_BY_JPQL = " ORDER BY empLicense.empLicenseId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY emp_license.empLicenseId ASC";
	public static final String DATA_SOURCE = "hrmDataSource";
	public static final String SESSION_FACTORY = "hrmSessionFactory";
	public static final String TX_MANAGER = "hrmTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rknowsys.eapp.hrm.model.EmpLicense"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rknowsys.eapp.hrm.model.EmpLicense"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.rknowsys.eapp.hrm.model.EmpLicense"),
			true);
	public static long EMPLOYEEID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long LICENSEID_COLUMN_BITMASK = 4L;
	public static long EMPLICENSEID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rknowsys.eapp.hrm.model.EmpLicense"));

	public EmpLicenseModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _empLicenseId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmpLicenseId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _empLicenseId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EmpLicense.class;
	}

	@Override
	public String getModelClassName() {
		return EmpLicense.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("empLicenseId", getEmpLicenseId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("userId", getUserId());
		attributes.put("licenseId", getLicenseId());
		attributes.put("licenseNumber", getLicenseNumber());
		attributes.put("issuedDate", getIssuedDate());
		attributes.put("expiryDate", getExpiryDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long empLicenseId = (Long)attributes.get("empLicenseId");

		if (empLicenseId != null) {
			setEmpLicenseId(empLicenseId);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long licenseId = (Long)attributes.get("licenseId");

		if (licenseId != null) {
			setLicenseId(licenseId);
		}

		String licenseNumber = (String)attributes.get("licenseNumber");

		if (licenseNumber != null) {
			setLicenseNumber(licenseNumber);
		}

		Date issuedDate = (Date)attributes.get("issuedDate");

		if (issuedDate != null) {
			setIssuedDate(issuedDate);
		}

		Date expiryDate = (Date)attributes.get("expiryDate");

		if (expiryDate != null) {
			setExpiryDate(expiryDate);
		}
	}

	@Override
	public long getEmpLicenseId() {
		return _empLicenseId;
	}

	@Override
	public void setEmpLicenseId(long empLicenseId) {
		_empLicenseId = empLicenseId;
	}

	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_columnBitmask |= EMPLOYEEID_COLUMN_BITMASK;

		if (!_setOriginalEmployeeId) {
			_setOriginalEmployeeId = true;

			_originalEmployeeId = _employeeId;
		}

		_employeeId = employeeId;
	}

	public long getOriginalEmployeeId() {
		return _originalEmployeeId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public long getLicenseId() {
		return _licenseId;
	}

	@Override
	public void setLicenseId(long licenseId) {
		_columnBitmask |= LICENSEID_COLUMN_BITMASK;

		if (!_setOriginalLicenseId) {
			_setOriginalLicenseId = true;

			_originalLicenseId = _licenseId;
		}

		_licenseId = licenseId;
	}

	public long getOriginalLicenseId() {
		return _originalLicenseId;
	}

	@Override
	public String getLicenseNumber() {
		if (_licenseNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _licenseNumber;
		}
	}

	@Override
	public void setLicenseNumber(String licenseNumber) {
		_licenseNumber = licenseNumber;
	}

	@Override
	public Date getIssuedDate() {
		return _issuedDate;
	}

	@Override
	public void setIssuedDate(Date issuedDate) {
		_issuedDate = issuedDate;
	}

	@Override
	public Date getExpiryDate() {
		return _expiryDate;
	}

	@Override
	public void setExpiryDate(Date expiryDate) {
		_expiryDate = expiryDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			EmpLicense.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EmpLicense toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EmpLicense)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EmpLicenseImpl empLicenseImpl = new EmpLicenseImpl();

		empLicenseImpl.setEmpLicenseId(getEmpLicenseId());
		empLicenseImpl.setEmployeeId(getEmployeeId());
		empLicenseImpl.setGroupId(getGroupId());
		empLicenseImpl.setCompanyId(getCompanyId());
		empLicenseImpl.setCreateDate(getCreateDate());
		empLicenseImpl.setModifiedDate(getModifiedDate());
		empLicenseImpl.setUserId(getUserId());
		empLicenseImpl.setLicenseId(getLicenseId());
		empLicenseImpl.setLicenseNumber(getLicenseNumber());
		empLicenseImpl.setIssuedDate(getIssuedDate());
		empLicenseImpl.setExpiryDate(getExpiryDate());

		empLicenseImpl.resetOriginalValues();

		return empLicenseImpl;
	}

	@Override
	public int compareTo(EmpLicense empLicense) {
		long primaryKey = empLicense.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EmpLicense)) {
			return false;
		}

		EmpLicense empLicense = (EmpLicense)obj;

		long primaryKey = empLicense.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EmpLicenseModelImpl empLicenseModelImpl = this;

		empLicenseModelImpl._originalEmployeeId = empLicenseModelImpl._employeeId;

		empLicenseModelImpl._setOriginalEmployeeId = false;

		empLicenseModelImpl._originalGroupId = empLicenseModelImpl._groupId;

		empLicenseModelImpl._setOriginalGroupId = false;

		empLicenseModelImpl._originalLicenseId = empLicenseModelImpl._licenseId;

		empLicenseModelImpl._setOriginalLicenseId = false;

		empLicenseModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EmpLicense> toCacheModel() {
		EmpLicenseCacheModel empLicenseCacheModel = new EmpLicenseCacheModel();

		empLicenseCacheModel.empLicenseId = getEmpLicenseId();

		empLicenseCacheModel.employeeId = getEmployeeId();

		empLicenseCacheModel.groupId = getGroupId();

		empLicenseCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			empLicenseCacheModel.createDate = createDate.getTime();
		}
		else {
			empLicenseCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			empLicenseCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			empLicenseCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		empLicenseCacheModel.userId = getUserId();

		empLicenseCacheModel.licenseId = getLicenseId();

		empLicenseCacheModel.licenseNumber = getLicenseNumber();

		String licenseNumber = empLicenseCacheModel.licenseNumber;

		if ((licenseNumber != null) && (licenseNumber.length() == 0)) {
			empLicenseCacheModel.licenseNumber = null;
		}

		Date issuedDate = getIssuedDate();

		if (issuedDate != null) {
			empLicenseCacheModel.issuedDate = issuedDate.getTime();
		}
		else {
			empLicenseCacheModel.issuedDate = Long.MIN_VALUE;
		}

		Date expiryDate = getExpiryDate();

		if (expiryDate != null) {
			empLicenseCacheModel.expiryDate = expiryDate.getTime();
		}
		else {
			empLicenseCacheModel.expiryDate = Long.MIN_VALUE;
		}

		return empLicenseCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{empLicenseId=");
		sb.append(getEmpLicenseId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", licenseId=");
		sb.append(getLicenseId());
		sb.append(", licenseNumber=");
		sb.append(getLicenseNumber());
		sb.append(", issuedDate=");
		sb.append(getIssuedDate());
		sb.append(", expiryDate=");
		sb.append(getExpiryDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.rknowsys.eapp.hrm.model.EmpLicense");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>empLicenseId</column-name><column-value><![CDATA[");
		sb.append(getEmpLicenseId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>licenseId</column-name><column-value><![CDATA[");
		sb.append(getLicenseId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>licenseNumber</column-name><column-value><![CDATA[");
		sb.append(getLicenseNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>issuedDate</column-name><column-value><![CDATA[");
		sb.append(getIssuedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expiryDate</column-name><column-value><![CDATA[");
		sb.append(getExpiryDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EmpLicense.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EmpLicense.class
		};
	private long _empLicenseId;
	private long _employeeId;
	private long _originalEmployeeId;
	private boolean _setOriginalEmployeeId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _userId;
	private String _userUuid;
	private long _licenseId;
	private long _originalLicenseId;
	private boolean _setOriginalLicenseId;
	private String _licenseNumber;
	private Date _issuedDate;
	private Date _expiryDate;
	private long _columnBitmask;
	private EmpLicense _escapedModel;
}