/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rknowsys.eapp.hrm.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rknowsys.eapp.hrm.model.EmpImmigrationDocument;
import com.rknowsys.eapp.hrm.model.EmpImmigrationDocumentModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the EmpImmigrationDocument service. Represents a row in the &quot;emp_immigration_document&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rknowsys.eapp.hrm.model.EmpImmigrationDocumentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmpImmigrationDocumentImpl}.
 * </p>
 *
 * @author rknowsys
 * @see EmpImmigrationDocumentImpl
 * @see com.rknowsys.eapp.hrm.model.EmpImmigrationDocument
 * @see com.rknowsys.eapp.hrm.model.EmpImmigrationDocumentModel
 * @generated
 */
public class EmpImmigrationDocumentModelImpl extends BaseModelImpl<EmpImmigrationDocument>
	implements EmpImmigrationDocumentModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ImmigrationDocument model instance should use the {@link com.rknowsys.eapp.hrm.model.EmpImmigrationDocument} interface instead.
	 */
	public static final String TABLE_NAME = "emp_immigration_document";
	public static final Object[][] TABLE_COLUMNS = {
			{ "empImmigrationDocumentId", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "userId", Types.BIGINT },
			{ "docType", Types.VARCHAR },
			{ "docNumber", Types.VARCHAR },
			{ "issuedDate", Types.TIMESTAMP },
			{ "expiryDate", Types.TIMESTAMP },
			{ "eligibleStatus", Types.VARCHAR },
			{ "issuedBy", Types.VARCHAR },
			{ "eligibleReviewDate", Types.TIMESTAMP },
			{ "comments", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table emp_immigration_document (empImmigrationDocumentId LONG not null primary key,employeeId LONG,groupId LONG,companyId LONG,createDate DATE null,modifiedDate DATE null,userId LONG,docType VARCHAR(75) null,docNumber VARCHAR(75) null,issuedDate DATE null,expiryDate DATE null,eligibleStatus VARCHAR(75) null,issuedBy VARCHAR(75) null,eligibleReviewDate DATE null,comments VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table emp_immigration_document";
	public static final String ORDER_BY_JPQL = " ORDER BY empImmigrationDocument.empImmigrationDocumentId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY emp_immigration_document.empImmigrationDocumentId ASC";
	public static final String DATA_SOURCE = "hrmDataSource";
	public static final String SESSION_FACTORY = "hrmSessionFactory";
	public static final String TX_MANAGER = "hrmTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rknowsys.eapp.hrm.model.EmpImmigrationDocument"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rknowsys.eapp.hrm.model.EmpImmigrationDocument"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.rknowsys.eapp.hrm.model.EmpImmigrationDocument"),
			true);
	public static long EMPIMMIGRATIONDOCUMENTID_COLUMN_BITMASK = 1L;
	public static long EMPLOYEEID_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rknowsys.eapp.hrm.model.EmpImmigrationDocument"));

	public EmpImmigrationDocumentModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _empImmigrationDocumentId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmpImmigrationDocumentId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _empImmigrationDocumentId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EmpImmigrationDocument.class;
	}

	@Override
	public String getModelClassName() {
		return EmpImmigrationDocument.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("empImmigrationDocumentId", getEmpImmigrationDocumentId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("userId", getUserId());
		attributes.put("docType", getDocType());
		attributes.put("docNumber", getDocNumber());
		attributes.put("issuedDate", getIssuedDate());
		attributes.put("expiryDate", getExpiryDate());
		attributes.put("eligibleStatus", getEligibleStatus());
		attributes.put("issuedBy", getIssuedBy());
		attributes.put("eligibleReviewDate", getEligibleReviewDate());
		attributes.put("comments", getComments());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long empImmigrationDocumentId = (Long)attributes.get(
				"empImmigrationDocumentId");

		if (empImmigrationDocumentId != null) {
			setEmpImmigrationDocumentId(empImmigrationDocumentId);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String docType = (String)attributes.get("docType");

		if (docType != null) {
			setDocType(docType);
		}

		String docNumber = (String)attributes.get("docNumber");

		if (docNumber != null) {
			setDocNumber(docNumber);
		}

		Date issuedDate = (Date)attributes.get("issuedDate");

		if (issuedDate != null) {
			setIssuedDate(issuedDate);
		}

		Date expiryDate = (Date)attributes.get("expiryDate");

		if (expiryDate != null) {
			setExpiryDate(expiryDate);
		}

		String eligibleStatus = (String)attributes.get("eligibleStatus");

		if (eligibleStatus != null) {
			setEligibleStatus(eligibleStatus);
		}

		String issuedBy = (String)attributes.get("issuedBy");

		if (issuedBy != null) {
			setIssuedBy(issuedBy);
		}

		Date eligibleReviewDate = (Date)attributes.get("eligibleReviewDate");

		if (eligibleReviewDate != null) {
			setEligibleReviewDate(eligibleReviewDate);
		}

		String comments = (String)attributes.get("comments");

		if (comments != null) {
			setComments(comments);
		}
	}

	@Override
	public long getEmpImmigrationDocumentId() {
		return _empImmigrationDocumentId;
	}

	@Override
	public void setEmpImmigrationDocumentId(long empImmigrationDocumentId) {
		_columnBitmask |= EMPIMMIGRATIONDOCUMENTID_COLUMN_BITMASK;

		if (!_setOriginalEmpImmigrationDocumentId) {
			_setOriginalEmpImmigrationDocumentId = true;

			_originalEmpImmigrationDocumentId = _empImmigrationDocumentId;
		}

		_empImmigrationDocumentId = empImmigrationDocumentId;
	}

	public long getOriginalEmpImmigrationDocumentId() {
		return _originalEmpImmigrationDocumentId;
	}

	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_columnBitmask |= EMPLOYEEID_COLUMN_BITMASK;

		if (!_setOriginalEmployeeId) {
			_setOriginalEmployeeId = true;

			_originalEmployeeId = _employeeId;
		}

		_employeeId = employeeId;
	}

	public long getOriginalEmployeeId() {
		return _originalEmployeeId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getDocType() {
		if (_docType == null) {
			return StringPool.BLANK;
		}
		else {
			return _docType;
		}
	}

	@Override
	public void setDocType(String docType) {
		_docType = docType;
	}

	@Override
	public String getDocNumber() {
		if (_docNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _docNumber;
		}
	}

	@Override
	public void setDocNumber(String docNumber) {
		_docNumber = docNumber;
	}

	@Override
	public Date getIssuedDate() {
		return _issuedDate;
	}

	@Override
	public void setIssuedDate(Date issuedDate) {
		_issuedDate = issuedDate;
	}

	@Override
	public Date getExpiryDate() {
		return _expiryDate;
	}

	@Override
	public void setExpiryDate(Date expiryDate) {
		_expiryDate = expiryDate;
	}

	@Override
	public String getEligibleStatus() {
		if (_eligibleStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _eligibleStatus;
		}
	}

	@Override
	public void setEligibleStatus(String eligibleStatus) {
		_eligibleStatus = eligibleStatus;
	}

	@Override
	public String getIssuedBy() {
		if (_issuedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _issuedBy;
		}
	}

	@Override
	public void setIssuedBy(String issuedBy) {
		_issuedBy = issuedBy;
	}

	@Override
	public Date getEligibleReviewDate() {
		return _eligibleReviewDate;
	}

	@Override
	public void setEligibleReviewDate(Date eligibleReviewDate) {
		_eligibleReviewDate = eligibleReviewDate;
	}

	@Override
	public String getComments() {
		if (_comments == null) {
			return StringPool.BLANK;
		}
		else {
			return _comments;
		}
	}

	@Override
	public void setComments(String comments) {
		_comments = comments;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			EmpImmigrationDocument.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EmpImmigrationDocument toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EmpImmigrationDocument)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EmpImmigrationDocumentImpl empImmigrationDocumentImpl = new EmpImmigrationDocumentImpl();

		empImmigrationDocumentImpl.setEmpImmigrationDocumentId(getEmpImmigrationDocumentId());
		empImmigrationDocumentImpl.setEmployeeId(getEmployeeId());
		empImmigrationDocumentImpl.setGroupId(getGroupId());
		empImmigrationDocumentImpl.setCompanyId(getCompanyId());
		empImmigrationDocumentImpl.setCreateDate(getCreateDate());
		empImmigrationDocumentImpl.setModifiedDate(getModifiedDate());
		empImmigrationDocumentImpl.setUserId(getUserId());
		empImmigrationDocumentImpl.setDocType(getDocType());
		empImmigrationDocumentImpl.setDocNumber(getDocNumber());
		empImmigrationDocumentImpl.setIssuedDate(getIssuedDate());
		empImmigrationDocumentImpl.setExpiryDate(getExpiryDate());
		empImmigrationDocumentImpl.setEligibleStatus(getEligibleStatus());
		empImmigrationDocumentImpl.setIssuedBy(getIssuedBy());
		empImmigrationDocumentImpl.setEligibleReviewDate(getEligibleReviewDate());
		empImmigrationDocumentImpl.setComments(getComments());

		empImmigrationDocumentImpl.resetOriginalValues();

		return empImmigrationDocumentImpl;
	}

	@Override
	public int compareTo(EmpImmigrationDocument empImmigrationDocument) {
		long primaryKey = empImmigrationDocument.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EmpImmigrationDocument)) {
			return false;
		}

		EmpImmigrationDocument empImmigrationDocument = (EmpImmigrationDocument)obj;

		long primaryKey = empImmigrationDocument.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EmpImmigrationDocumentModelImpl empImmigrationDocumentModelImpl = this;

		empImmigrationDocumentModelImpl._originalEmpImmigrationDocumentId = empImmigrationDocumentModelImpl._empImmigrationDocumentId;

		empImmigrationDocumentModelImpl._setOriginalEmpImmigrationDocumentId = false;

		empImmigrationDocumentModelImpl._originalEmployeeId = empImmigrationDocumentModelImpl._employeeId;

		empImmigrationDocumentModelImpl._setOriginalEmployeeId = false;

		empImmigrationDocumentModelImpl._originalGroupId = empImmigrationDocumentModelImpl._groupId;

		empImmigrationDocumentModelImpl._setOriginalGroupId = false;

		empImmigrationDocumentModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EmpImmigrationDocument> toCacheModel() {
		EmpImmigrationDocumentCacheModel empImmigrationDocumentCacheModel = new EmpImmigrationDocumentCacheModel();

		empImmigrationDocumentCacheModel.empImmigrationDocumentId = getEmpImmigrationDocumentId();

		empImmigrationDocumentCacheModel.employeeId = getEmployeeId();

		empImmigrationDocumentCacheModel.groupId = getGroupId();

		empImmigrationDocumentCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			empImmigrationDocumentCacheModel.createDate = createDate.getTime();
		}
		else {
			empImmigrationDocumentCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			empImmigrationDocumentCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			empImmigrationDocumentCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		empImmigrationDocumentCacheModel.userId = getUserId();

		empImmigrationDocumentCacheModel.docType = getDocType();

		String docType = empImmigrationDocumentCacheModel.docType;

		if ((docType != null) && (docType.length() == 0)) {
			empImmigrationDocumentCacheModel.docType = null;
		}

		empImmigrationDocumentCacheModel.docNumber = getDocNumber();

		String docNumber = empImmigrationDocumentCacheModel.docNumber;

		if ((docNumber != null) && (docNumber.length() == 0)) {
			empImmigrationDocumentCacheModel.docNumber = null;
		}

		Date issuedDate = getIssuedDate();

		if (issuedDate != null) {
			empImmigrationDocumentCacheModel.issuedDate = issuedDate.getTime();
		}
		else {
			empImmigrationDocumentCacheModel.issuedDate = Long.MIN_VALUE;
		}

		Date expiryDate = getExpiryDate();

		if (expiryDate != null) {
			empImmigrationDocumentCacheModel.expiryDate = expiryDate.getTime();
		}
		else {
			empImmigrationDocumentCacheModel.expiryDate = Long.MIN_VALUE;
		}

		empImmigrationDocumentCacheModel.eligibleStatus = getEligibleStatus();

		String eligibleStatus = empImmigrationDocumentCacheModel.eligibleStatus;

		if ((eligibleStatus != null) && (eligibleStatus.length() == 0)) {
			empImmigrationDocumentCacheModel.eligibleStatus = null;
		}

		empImmigrationDocumentCacheModel.issuedBy = getIssuedBy();

		String issuedBy = empImmigrationDocumentCacheModel.issuedBy;

		if ((issuedBy != null) && (issuedBy.length() == 0)) {
			empImmigrationDocumentCacheModel.issuedBy = null;
		}

		Date eligibleReviewDate = getEligibleReviewDate();

		if (eligibleReviewDate != null) {
			empImmigrationDocumentCacheModel.eligibleReviewDate = eligibleReviewDate.getTime();
		}
		else {
			empImmigrationDocumentCacheModel.eligibleReviewDate = Long.MIN_VALUE;
		}

		empImmigrationDocumentCacheModel.comments = getComments();

		String comments = empImmigrationDocumentCacheModel.comments;

		if ((comments != null) && (comments.length() == 0)) {
			empImmigrationDocumentCacheModel.comments = null;
		}

		return empImmigrationDocumentCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{empImmigrationDocumentId=");
		sb.append(getEmpImmigrationDocumentId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", docType=");
		sb.append(getDocType());
		sb.append(", docNumber=");
		sb.append(getDocNumber());
		sb.append(", issuedDate=");
		sb.append(getIssuedDate());
		sb.append(", expiryDate=");
		sb.append(getExpiryDate());
		sb.append(", eligibleStatus=");
		sb.append(getEligibleStatus());
		sb.append(", issuedBy=");
		sb.append(getIssuedBy());
		sb.append(", eligibleReviewDate=");
		sb.append(getEligibleReviewDate());
		sb.append(", comments=");
		sb.append(getComments());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("com.rknowsys.eapp.hrm.model.EmpImmigrationDocument");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>empImmigrationDocumentId</column-name><column-value><![CDATA[");
		sb.append(getEmpImmigrationDocumentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>docType</column-name><column-value><![CDATA[");
		sb.append(getDocType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>docNumber</column-name><column-value><![CDATA[");
		sb.append(getDocNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>issuedDate</column-name><column-value><![CDATA[");
		sb.append(getIssuedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expiryDate</column-name><column-value><![CDATA[");
		sb.append(getExpiryDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eligibleStatus</column-name><column-value><![CDATA[");
		sb.append(getEligibleStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>issuedBy</column-name><column-value><![CDATA[");
		sb.append(getIssuedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eligibleReviewDate</column-name><column-value><![CDATA[");
		sb.append(getEligibleReviewDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comments</column-name><column-value><![CDATA[");
		sb.append(getComments());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EmpImmigrationDocument.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EmpImmigrationDocument.class
		};
	private long _empImmigrationDocumentId;
	private long _originalEmpImmigrationDocumentId;
	private boolean _setOriginalEmpImmigrationDocumentId;
	private long _employeeId;
	private long _originalEmployeeId;
	private boolean _setOriginalEmployeeId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _userId;
	private String _userUuid;
	private String _docType;
	private String _docNumber;
	private Date _issuedDate;
	private Date _expiryDate;
	private String _eligibleStatus;
	private String _issuedBy;
	private Date _eligibleReviewDate;
	private String _comments;
	private long _columnBitmask;
	private EmpImmigrationDocument _escapedModel;
}