/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rknowsys.eapp.hrm.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rknowsys.eapp.hrm.model.EmpContactDetails;
import com.rknowsys.eapp.hrm.model.EmpContactDetailsModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the EmpContactDetails service. Represents a row in the &quot;emp_contact_details&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rknowsys.eapp.hrm.model.EmpContactDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmpContactDetailsImpl}.
 * </p>
 *
 * @author rknowsys
 * @see EmpContactDetailsImpl
 * @see com.rknowsys.eapp.hrm.model.EmpContactDetails
 * @see com.rknowsys.eapp.hrm.model.EmpContactDetailsModel
 * @generated
 */
public class EmpContactDetailsModelImpl extends BaseModelImpl<EmpContactDetails>
	implements EmpContactDetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a EmpContactDetails model instance should use the {@link com.rknowsys.eapp.hrm.model.EmpContactDetails} interface instead.
	 */
	public static final String TABLE_NAME = "emp_contact_details";
	public static final Object[][] TABLE_COLUMNS = {
			{ "empContactDetailsId", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "addressStreet1", Types.VARCHAR },
			{ "addressStreet2", Types.VARCHAR },
			{ "city", Types.VARCHAR },
			{ "state_", Types.VARCHAR },
			{ "postalCode", Types.VARCHAR },
			{ "country", Types.VARCHAR },
			{ "homeTelephone", Types.VARCHAR },
			{ "mobile", Types.VARCHAR },
			{ "workTelephone", Types.VARCHAR },
			{ "workEmail", Types.VARCHAR },
			{ "otherEmail", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table emp_contact_details (empContactDetailsId LONG not null primary key,employeeId LONG,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,addressStreet1 VARCHAR(75) null,addressStreet2 VARCHAR(75) null,city VARCHAR(75) null,state_ VARCHAR(75) null,postalCode VARCHAR(75) null,country VARCHAR(75) null,homeTelephone VARCHAR(75) null,mobile VARCHAR(75) null,workTelephone VARCHAR(75) null,workEmail VARCHAR(75) null,otherEmail VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table emp_contact_details";
	public static final String ORDER_BY_JPQL = " ORDER BY empContactDetails.empContactDetailsId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY emp_contact_details.empContactDetailsId ASC";
	public static final String DATA_SOURCE = "hrmDataSource";
	public static final String SESSION_FACTORY = "hrmSessionFactory";
	public static final String TX_MANAGER = "hrmTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rknowsys.eapp.hrm.model.EmpContactDetails"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rknowsys.eapp.hrm.model.EmpContactDetails"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rknowsys.eapp.hrm.model.EmpContactDetails"));

	public EmpContactDetailsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _empContactDetailsId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmpContactDetailsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _empContactDetailsId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EmpContactDetails.class;
	}

	@Override
	public String getModelClassName() {
		return EmpContactDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("empContactDetailsId", getEmpContactDetailsId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("addressStreet1", getAddressStreet1());
		attributes.put("addressStreet2", getAddressStreet2());
		attributes.put("city", getCity());
		attributes.put("state", getState());
		attributes.put("postalCode", getPostalCode());
		attributes.put("country", getCountry());
		attributes.put("homeTelephone", getHomeTelephone());
		attributes.put("mobile", getMobile());
		attributes.put("workTelephone", getWorkTelephone());
		attributes.put("workEmail", getWorkEmail());
		attributes.put("otherEmail", getOtherEmail());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long empContactDetailsId = (Long)attributes.get("empContactDetailsId");

		if (empContactDetailsId != null) {
			setEmpContactDetailsId(empContactDetailsId);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String addressStreet1 = (String)attributes.get("addressStreet1");

		if (addressStreet1 != null) {
			setAddressStreet1(addressStreet1);
		}

		String addressStreet2 = (String)attributes.get("addressStreet2");

		if (addressStreet2 != null) {
			setAddressStreet2(addressStreet2);
		}

		String city = (String)attributes.get("city");

		if (city != null) {
			setCity(city);
		}

		String state = (String)attributes.get("state");

		if (state != null) {
			setState(state);
		}

		String postalCode = (String)attributes.get("postalCode");

		if (postalCode != null) {
			setPostalCode(postalCode);
		}

		String country = (String)attributes.get("country");

		if (country != null) {
			setCountry(country);
		}

		String homeTelephone = (String)attributes.get("homeTelephone");

		if (homeTelephone != null) {
			setHomeTelephone(homeTelephone);
		}

		String mobile = (String)attributes.get("mobile");

		if (mobile != null) {
			setMobile(mobile);
		}

		String workTelephone = (String)attributes.get("workTelephone");

		if (workTelephone != null) {
			setWorkTelephone(workTelephone);
		}

		String workEmail = (String)attributes.get("workEmail");

		if (workEmail != null) {
			setWorkEmail(workEmail);
		}

		String otherEmail = (String)attributes.get("otherEmail");

		if (otherEmail != null) {
			setOtherEmail(otherEmail);
		}
	}

	@Override
	public long getEmpContactDetailsId() {
		return _empContactDetailsId;
	}

	@Override
	public void setEmpContactDetailsId(long empContactDetailsId) {
		_empContactDetailsId = empContactDetailsId;
	}

	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_employeeId = employeeId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getAddressStreet1() {
		if (_addressStreet1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _addressStreet1;
		}
	}

	@Override
	public void setAddressStreet1(String addressStreet1) {
		_addressStreet1 = addressStreet1;
	}

	@Override
	public String getAddressStreet2() {
		if (_addressStreet2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _addressStreet2;
		}
	}

	@Override
	public void setAddressStreet2(String addressStreet2) {
		_addressStreet2 = addressStreet2;
	}

	@Override
	public String getCity() {
		if (_city == null) {
			return StringPool.BLANK;
		}
		else {
			return _city;
		}
	}

	@Override
	public void setCity(String city) {
		_city = city;
	}

	@Override
	public String getState() {
		if (_state == null) {
			return StringPool.BLANK;
		}
		else {
			return _state;
		}
	}

	@Override
	public void setState(String state) {
		_state = state;
	}

	@Override
	public String getPostalCode() {
		if (_postalCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _postalCode;
		}
	}

	@Override
	public void setPostalCode(String postalCode) {
		_postalCode = postalCode;
	}

	@Override
	public String getCountry() {
		if (_country == null) {
			return StringPool.BLANK;
		}
		else {
			return _country;
		}
	}

	@Override
	public void setCountry(String country) {
		_country = country;
	}

	@Override
	public String getHomeTelephone() {
		if (_homeTelephone == null) {
			return StringPool.BLANK;
		}
		else {
			return _homeTelephone;
		}
	}

	@Override
	public void setHomeTelephone(String homeTelephone) {
		_homeTelephone = homeTelephone;
	}

	@Override
	public String getMobile() {
		if (_mobile == null) {
			return StringPool.BLANK;
		}
		else {
			return _mobile;
		}
	}

	@Override
	public void setMobile(String mobile) {
		_mobile = mobile;
	}

	@Override
	public String getWorkTelephone() {
		if (_workTelephone == null) {
			return StringPool.BLANK;
		}
		else {
			return _workTelephone;
		}
	}

	@Override
	public void setWorkTelephone(String workTelephone) {
		_workTelephone = workTelephone;
	}

	@Override
	public String getWorkEmail() {
		if (_workEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _workEmail;
		}
	}

	@Override
	public void setWorkEmail(String workEmail) {
		_workEmail = workEmail;
	}

	@Override
	public String getOtherEmail() {
		if (_otherEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _otherEmail;
		}
	}

	@Override
	public void setOtherEmail(String otherEmail) {
		_otherEmail = otherEmail;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			EmpContactDetails.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EmpContactDetails toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EmpContactDetails)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EmpContactDetailsImpl empContactDetailsImpl = new EmpContactDetailsImpl();

		empContactDetailsImpl.setEmpContactDetailsId(getEmpContactDetailsId());
		empContactDetailsImpl.setEmployeeId(getEmployeeId());
		empContactDetailsImpl.setGroupId(getGroupId());
		empContactDetailsImpl.setCompanyId(getCompanyId());
		empContactDetailsImpl.setUserId(getUserId());
		empContactDetailsImpl.setUserName(getUserName());
		empContactDetailsImpl.setCreateDate(getCreateDate());
		empContactDetailsImpl.setModifiedDate(getModifiedDate());
		empContactDetailsImpl.setAddressStreet1(getAddressStreet1());
		empContactDetailsImpl.setAddressStreet2(getAddressStreet2());
		empContactDetailsImpl.setCity(getCity());
		empContactDetailsImpl.setState(getState());
		empContactDetailsImpl.setPostalCode(getPostalCode());
		empContactDetailsImpl.setCountry(getCountry());
		empContactDetailsImpl.setHomeTelephone(getHomeTelephone());
		empContactDetailsImpl.setMobile(getMobile());
		empContactDetailsImpl.setWorkTelephone(getWorkTelephone());
		empContactDetailsImpl.setWorkEmail(getWorkEmail());
		empContactDetailsImpl.setOtherEmail(getOtherEmail());

		empContactDetailsImpl.resetOriginalValues();

		return empContactDetailsImpl;
	}

	@Override
	public int compareTo(EmpContactDetails empContactDetails) {
		long primaryKey = empContactDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EmpContactDetails)) {
			return false;
		}

		EmpContactDetails empContactDetails = (EmpContactDetails)obj;

		long primaryKey = empContactDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<EmpContactDetails> toCacheModel() {
		EmpContactDetailsCacheModel empContactDetailsCacheModel = new EmpContactDetailsCacheModel();

		empContactDetailsCacheModel.empContactDetailsId = getEmpContactDetailsId();

		empContactDetailsCacheModel.employeeId = getEmployeeId();

		empContactDetailsCacheModel.groupId = getGroupId();

		empContactDetailsCacheModel.companyId = getCompanyId();

		empContactDetailsCacheModel.userId = getUserId();

		empContactDetailsCacheModel.userName = getUserName();

		String userName = empContactDetailsCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			empContactDetailsCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			empContactDetailsCacheModel.createDate = createDate.getTime();
		}
		else {
			empContactDetailsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			empContactDetailsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			empContactDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		empContactDetailsCacheModel.addressStreet1 = getAddressStreet1();

		String addressStreet1 = empContactDetailsCacheModel.addressStreet1;

		if ((addressStreet1 != null) && (addressStreet1.length() == 0)) {
			empContactDetailsCacheModel.addressStreet1 = null;
		}

		empContactDetailsCacheModel.addressStreet2 = getAddressStreet2();

		String addressStreet2 = empContactDetailsCacheModel.addressStreet2;

		if ((addressStreet2 != null) && (addressStreet2.length() == 0)) {
			empContactDetailsCacheModel.addressStreet2 = null;
		}

		empContactDetailsCacheModel.city = getCity();

		String city = empContactDetailsCacheModel.city;

		if ((city != null) && (city.length() == 0)) {
			empContactDetailsCacheModel.city = null;
		}

		empContactDetailsCacheModel.state = getState();

		String state = empContactDetailsCacheModel.state;

		if ((state != null) && (state.length() == 0)) {
			empContactDetailsCacheModel.state = null;
		}

		empContactDetailsCacheModel.postalCode = getPostalCode();

		String postalCode = empContactDetailsCacheModel.postalCode;

		if ((postalCode != null) && (postalCode.length() == 0)) {
			empContactDetailsCacheModel.postalCode = null;
		}

		empContactDetailsCacheModel.country = getCountry();

		String country = empContactDetailsCacheModel.country;

		if ((country != null) && (country.length() == 0)) {
			empContactDetailsCacheModel.country = null;
		}

		empContactDetailsCacheModel.homeTelephone = getHomeTelephone();

		String homeTelephone = empContactDetailsCacheModel.homeTelephone;

		if ((homeTelephone != null) && (homeTelephone.length() == 0)) {
			empContactDetailsCacheModel.homeTelephone = null;
		}

		empContactDetailsCacheModel.mobile = getMobile();

		String mobile = empContactDetailsCacheModel.mobile;

		if ((mobile != null) && (mobile.length() == 0)) {
			empContactDetailsCacheModel.mobile = null;
		}

		empContactDetailsCacheModel.workTelephone = getWorkTelephone();

		String workTelephone = empContactDetailsCacheModel.workTelephone;

		if ((workTelephone != null) && (workTelephone.length() == 0)) {
			empContactDetailsCacheModel.workTelephone = null;
		}

		empContactDetailsCacheModel.workEmail = getWorkEmail();

		String workEmail = empContactDetailsCacheModel.workEmail;

		if ((workEmail != null) && (workEmail.length() == 0)) {
			empContactDetailsCacheModel.workEmail = null;
		}

		empContactDetailsCacheModel.otherEmail = getOtherEmail();

		String otherEmail = empContactDetailsCacheModel.otherEmail;

		if ((otherEmail != null) && (otherEmail.length() == 0)) {
			empContactDetailsCacheModel.otherEmail = null;
		}

		return empContactDetailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(39);

		sb.append("{empContactDetailsId=");
		sb.append(getEmpContactDetailsId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", addressStreet1=");
		sb.append(getAddressStreet1());
		sb.append(", addressStreet2=");
		sb.append(getAddressStreet2());
		sb.append(", city=");
		sb.append(getCity());
		sb.append(", state=");
		sb.append(getState());
		sb.append(", postalCode=");
		sb.append(getPostalCode());
		sb.append(", country=");
		sb.append(getCountry());
		sb.append(", homeTelephone=");
		sb.append(getHomeTelephone());
		sb.append(", mobile=");
		sb.append(getMobile());
		sb.append(", workTelephone=");
		sb.append(getWorkTelephone());
		sb.append(", workEmail=");
		sb.append(getWorkEmail());
		sb.append(", otherEmail=");
		sb.append(getOtherEmail());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(61);

		sb.append("<model><model-name>");
		sb.append("com.rknowsys.eapp.hrm.model.EmpContactDetails");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>empContactDetailsId</column-name><column-value><![CDATA[");
		sb.append(getEmpContactDetailsId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addressStreet1</column-name><column-value><![CDATA[");
		sb.append(getAddressStreet1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addressStreet2</column-name><column-value><![CDATA[");
		sb.append(getAddressStreet2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>city</column-name><column-value><![CDATA[");
		sb.append(getCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>state</column-name><column-value><![CDATA[");
		sb.append(getState());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>postalCode</column-name><column-value><![CDATA[");
		sb.append(getPostalCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>country</column-name><column-value><![CDATA[");
		sb.append(getCountry());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>homeTelephone</column-name><column-value><![CDATA[");
		sb.append(getHomeTelephone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mobile</column-name><column-value><![CDATA[");
		sb.append(getMobile());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workTelephone</column-name><column-value><![CDATA[");
		sb.append(getWorkTelephone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workEmail</column-name><column-value><![CDATA[");
		sb.append(getWorkEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>otherEmail</column-name><column-value><![CDATA[");
		sb.append(getOtherEmail());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EmpContactDetails.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EmpContactDetails.class
		};
	private long _empContactDetailsId;
	private long _employeeId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _addressStreet1;
	private String _addressStreet2;
	private String _city;
	private String _state;
	private String _postalCode;
	private String _country;
	private String _homeTelephone;
	private String _mobile;
	private String _workTelephone;
	private String _workEmail;
	private String _otherEmail;
	private EmpContactDetails _escapedModel;
}