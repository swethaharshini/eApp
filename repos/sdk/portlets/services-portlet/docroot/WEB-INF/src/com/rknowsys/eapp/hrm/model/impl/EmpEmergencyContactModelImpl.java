/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rknowsys.eapp.hrm.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rknowsys.eapp.hrm.model.EmpEmergencyContact;
import com.rknowsys.eapp.hrm.model.EmpEmergencyContactModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the EmpEmergencyContact service. Represents a row in the &quot;emp_emergency_contact&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rknowsys.eapp.hrm.model.EmpEmergencyContactModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmpEmergencyContactImpl}.
 * </p>
 *
 * @author rknowsys
 * @see EmpEmergencyContactImpl
 * @see com.rknowsys.eapp.hrm.model.EmpEmergencyContact
 * @see com.rknowsys.eapp.hrm.model.EmpEmergencyContactModel
 * @generated
 */
public class EmpEmergencyContactModelImpl extends BaseModelImpl<EmpEmergencyContact>
	implements EmpEmergencyContactModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a EmpEmergencyContact model instance should use the {@link com.rknowsys.eapp.hrm.model.EmpEmergencyContact} interface instead.
	 */
	public static final String TABLE_NAME = "emp_emergency_contact";
	public static final Object[][] TABLE_COLUMNS = {
			{ "empEmergencyContactId", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "name", Types.VARCHAR },
			{ "relationship", Types.VARCHAR },
			{ "homeTelephone", Types.VARCHAR },
			{ "mobile", Types.VARCHAR },
			{ "workTelephone", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table emp_emergency_contact (empEmergencyContactId LONG not null primary key,employeeId LONG,groupId LONG,companyId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,name VARCHAR(75) null,relationship VARCHAR(75) null,homeTelephone VARCHAR(75) null,mobile VARCHAR(75) null,workTelephone VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table emp_emergency_contact";
	public static final String ORDER_BY_JPQL = " ORDER BY empEmergencyContact.empEmergencyContactId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY emp_emergency_contact.empEmergencyContactId ASC";
	public static final String DATA_SOURCE = "hrmDataSource";
	public static final String SESSION_FACTORY = "hrmSessionFactory";
	public static final String TX_MANAGER = "hrmTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rknowsys.eapp.hrm.model.EmpEmergencyContact"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rknowsys.eapp.hrm.model.EmpEmergencyContact"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.rknowsys.eapp.hrm.model.EmpEmergencyContact"),
			true);
	public static long EMPEMERGENCYCONTACTID_COLUMN_BITMASK = 1L;
	public static long EMPLOYEEID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rknowsys.eapp.hrm.model.EmpEmergencyContact"));

	public EmpEmergencyContactModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _empEmergencyContactId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmpEmergencyContactId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _empEmergencyContactId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EmpEmergencyContact.class;
	}

	@Override
	public String getModelClassName() {
		return EmpEmergencyContact.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("empEmergencyContactId", getEmpEmergencyContactId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("name", getName());
		attributes.put("relationship", getRelationship());
		attributes.put("homeTelephone", getHomeTelephone());
		attributes.put("mobile", getMobile());
		attributes.put("workTelephone", getWorkTelephone());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long empEmergencyContactId = (Long)attributes.get(
				"empEmergencyContactId");

		if (empEmergencyContactId != null) {
			setEmpEmergencyContactId(empEmergencyContactId);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String relationship = (String)attributes.get("relationship");

		if (relationship != null) {
			setRelationship(relationship);
		}

		String homeTelephone = (String)attributes.get("homeTelephone");

		if (homeTelephone != null) {
			setHomeTelephone(homeTelephone);
		}

		String mobile = (String)attributes.get("mobile");

		if (mobile != null) {
			setMobile(mobile);
		}

		String workTelephone = (String)attributes.get("workTelephone");

		if (workTelephone != null) {
			setWorkTelephone(workTelephone);
		}
	}

	@Override
	public long getEmpEmergencyContactId() {
		return _empEmergencyContactId;
	}

	@Override
	public void setEmpEmergencyContactId(long empEmergencyContactId) {
		_columnBitmask |= EMPEMERGENCYCONTACTID_COLUMN_BITMASK;

		if (!_setOriginalEmpEmergencyContactId) {
			_setOriginalEmpEmergencyContactId = true;

			_originalEmpEmergencyContactId = _empEmergencyContactId;
		}

		_empEmergencyContactId = empEmergencyContactId;
	}

	public long getOriginalEmpEmergencyContactId() {
		return _originalEmpEmergencyContactId;
	}

	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_columnBitmask |= EMPLOYEEID_COLUMN_BITMASK;

		if (!_setOriginalEmployeeId) {
			_setOriginalEmployeeId = true;

			_originalEmployeeId = _employeeId;
		}

		_employeeId = employeeId;
	}

	public long getOriginalEmployeeId() {
		return _originalEmployeeId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getRelationship() {
		if (_relationship == null) {
			return StringPool.BLANK;
		}
		else {
			return _relationship;
		}
	}

	@Override
	public void setRelationship(String relationship) {
		_relationship = relationship;
	}

	@Override
	public String getHomeTelephone() {
		if (_homeTelephone == null) {
			return StringPool.BLANK;
		}
		else {
			return _homeTelephone;
		}
	}

	@Override
	public void setHomeTelephone(String homeTelephone) {
		_homeTelephone = homeTelephone;
	}

	@Override
	public String getMobile() {
		if (_mobile == null) {
			return StringPool.BLANK;
		}
		else {
			return _mobile;
		}
	}

	@Override
	public void setMobile(String mobile) {
		_mobile = mobile;
	}

	@Override
	public String getWorkTelephone() {
		if (_workTelephone == null) {
			return StringPool.BLANK;
		}
		else {
			return _workTelephone;
		}
	}

	@Override
	public void setWorkTelephone(String workTelephone) {
		_workTelephone = workTelephone;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			EmpEmergencyContact.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EmpEmergencyContact toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EmpEmergencyContact)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EmpEmergencyContactImpl empEmergencyContactImpl = new EmpEmergencyContactImpl();

		empEmergencyContactImpl.setEmpEmergencyContactId(getEmpEmergencyContactId());
		empEmergencyContactImpl.setEmployeeId(getEmployeeId());
		empEmergencyContactImpl.setGroupId(getGroupId());
		empEmergencyContactImpl.setCompanyId(getCompanyId());
		empEmergencyContactImpl.setUserId(getUserId());
		empEmergencyContactImpl.setCreateDate(getCreateDate());
		empEmergencyContactImpl.setModifiedDate(getModifiedDate());
		empEmergencyContactImpl.setName(getName());
		empEmergencyContactImpl.setRelationship(getRelationship());
		empEmergencyContactImpl.setHomeTelephone(getHomeTelephone());
		empEmergencyContactImpl.setMobile(getMobile());
		empEmergencyContactImpl.setWorkTelephone(getWorkTelephone());

		empEmergencyContactImpl.resetOriginalValues();

		return empEmergencyContactImpl;
	}

	@Override
	public int compareTo(EmpEmergencyContact empEmergencyContact) {
		long primaryKey = empEmergencyContact.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EmpEmergencyContact)) {
			return false;
		}

		EmpEmergencyContact empEmergencyContact = (EmpEmergencyContact)obj;

		long primaryKey = empEmergencyContact.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EmpEmergencyContactModelImpl empEmergencyContactModelImpl = this;

		empEmergencyContactModelImpl._originalEmpEmergencyContactId = empEmergencyContactModelImpl._empEmergencyContactId;

		empEmergencyContactModelImpl._setOriginalEmpEmergencyContactId = false;

		empEmergencyContactModelImpl._originalEmployeeId = empEmergencyContactModelImpl._employeeId;

		empEmergencyContactModelImpl._setOriginalEmployeeId = false;

		empEmergencyContactModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EmpEmergencyContact> toCacheModel() {
		EmpEmergencyContactCacheModel empEmergencyContactCacheModel = new EmpEmergencyContactCacheModel();

		empEmergencyContactCacheModel.empEmergencyContactId = getEmpEmergencyContactId();

		empEmergencyContactCacheModel.employeeId = getEmployeeId();

		empEmergencyContactCacheModel.groupId = getGroupId();

		empEmergencyContactCacheModel.companyId = getCompanyId();

		empEmergencyContactCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			empEmergencyContactCacheModel.createDate = createDate.getTime();
		}
		else {
			empEmergencyContactCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			empEmergencyContactCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			empEmergencyContactCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		empEmergencyContactCacheModel.name = getName();

		String name = empEmergencyContactCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			empEmergencyContactCacheModel.name = null;
		}

		empEmergencyContactCacheModel.relationship = getRelationship();

		String relationship = empEmergencyContactCacheModel.relationship;

		if ((relationship != null) && (relationship.length() == 0)) {
			empEmergencyContactCacheModel.relationship = null;
		}

		empEmergencyContactCacheModel.homeTelephone = getHomeTelephone();

		String homeTelephone = empEmergencyContactCacheModel.homeTelephone;

		if ((homeTelephone != null) && (homeTelephone.length() == 0)) {
			empEmergencyContactCacheModel.homeTelephone = null;
		}

		empEmergencyContactCacheModel.mobile = getMobile();

		String mobile = empEmergencyContactCacheModel.mobile;

		if ((mobile != null) && (mobile.length() == 0)) {
			empEmergencyContactCacheModel.mobile = null;
		}

		empEmergencyContactCacheModel.workTelephone = getWorkTelephone();

		String workTelephone = empEmergencyContactCacheModel.workTelephone;

		if ((workTelephone != null) && (workTelephone.length() == 0)) {
			empEmergencyContactCacheModel.workTelephone = null;
		}

		return empEmergencyContactCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{empEmergencyContactId=");
		sb.append(getEmpEmergencyContactId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", relationship=");
		sb.append(getRelationship());
		sb.append(", homeTelephone=");
		sb.append(getHomeTelephone());
		sb.append(", mobile=");
		sb.append(getMobile());
		sb.append(", workTelephone=");
		sb.append(getWorkTelephone());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.rknowsys.eapp.hrm.model.EmpEmergencyContact");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>empEmergencyContactId</column-name><column-value><![CDATA[");
		sb.append(getEmpEmergencyContactId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>relationship</column-name><column-value><![CDATA[");
		sb.append(getRelationship());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>homeTelephone</column-name><column-value><![CDATA[");
		sb.append(getHomeTelephone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mobile</column-name><column-value><![CDATA[");
		sb.append(getMobile());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workTelephone</column-name><column-value><![CDATA[");
		sb.append(getWorkTelephone());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EmpEmergencyContact.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EmpEmergencyContact.class
		};
	private long _empEmergencyContactId;
	private long _originalEmpEmergencyContactId;
	private boolean _setOriginalEmpEmergencyContactId;
	private long _employeeId;
	private long _originalEmployeeId;
	private boolean _setOriginalEmployeeId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private String _name;
	private String _relationship;
	private String _homeTelephone;
	private String _mobile;
	private String _workTelephone;
	private long _columnBitmask;
	private EmpEmergencyContact _escapedModel;
}