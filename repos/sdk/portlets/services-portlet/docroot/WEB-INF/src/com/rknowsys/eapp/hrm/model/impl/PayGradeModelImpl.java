/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rknowsys.eapp.hrm.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rknowsys.eapp.hrm.model.PayGrade;
import com.rknowsys.eapp.hrm.model.PayGradeModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PayGrade service. Represents a row in the &quot;pay_grade&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rknowsys.eapp.hrm.model.PayGradeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PayGradeImpl}.
 * </p>
 *
 * @author rknowsys
 * @see PayGradeImpl
 * @see com.rknowsys.eapp.hrm.model.PayGrade
 * @see com.rknowsys.eapp.hrm.model.PayGradeModel
 * @generated
 */
public class PayGradeModelImpl extends BaseModelImpl<PayGrade>
	implements PayGradeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a pay grade model instance should use the {@link com.rknowsys.eapp.hrm.model.PayGrade} interface instead.
	 */
	public static final String TABLE_NAME = "pay_grade";
	public static final Object[][] TABLE_COLUMNS = {
			{ "payGradeId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "userId", Types.BIGINT },
			{ "payGradeName", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table pay_grade (payGradeId LONG not null primary key,companyId LONG,groupId LONG,createDate DATE null,modifiedDate DATE null,userId LONG,payGradeName VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table pay_grade";
	public static final String ORDER_BY_JPQL = " ORDER BY payGrade.payGradeId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY pay_grade.payGradeId ASC";
	public static final String DATA_SOURCE = "hrmDataSource";
	public static final String SESSION_FACTORY = "hrmSessionFactory";
	public static final String TX_MANAGER = "hrmTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rknowsys.eapp.hrm.model.PayGrade"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rknowsys.eapp.hrm.model.PayGrade"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.rknowsys.eapp.hrm.model.PayGrade"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long PAYGRADEID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rknowsys.eapp.hrm.model.PayGrade"));

	public PayGradeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _payGradeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPayGradeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _payGradeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PayGrade.class;
	}

	@Override
	public String getModelClassName() {
		return PayGrade.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("payGradeId", getPayGradeId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("userId", getUserId());
		attributes.put("payGradeName", getPayGradeName());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long payGradeId = (Long)attributes.get("payGradeId");

		if (payGradeId != null) {
			setPayGradeId(payGradeId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String payGradeName = (String)attributes.get("payGradeName");

		if (payGradeName != null) {
			setPayGradeName(payGradeName);
		}
	}

	@Override
	public long getPayGradeId() {
		return _payGradeId;
	}

	@Override
	public void setPayGradeId(long payGradeId) {
		_payGradeId = payGradeId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getPayGradeName() {
		if (_payGradeName == null) {
			return StringPool.BLANK;
		}
		else {
			return _payGradeName;
		}
	}

	@Override
	public void setPayGradeName(String payGradeName) {
		_payGradeName = payGradeName;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			PayGrade.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PayGrade toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PayGrade)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PayGradeImpl payGradeImpl = new PayGradeImpl();

		payGradeImpl.setPayGradeId(getPayGradeId());
		payGradeImpl.setCompanyId(getCompanyId());
		payGradeImpl.setGroupId(getGroupId());
		payGradeImpl.setCreateDate(getCreateDate());
		payGradeImpl.setModifiedDate(getModifiedDate());
		payGradeImpl.setUserId(getUserId());
		payGradeImpl.setPayGradeName(getPayGradeName());

		payGradeImpl.resetOriginalValues();

		return payGradeImpl;
	}

	@Override
	public int compareTo(PayGrade payGrade) {
		long primaryKey = payGrade.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PayGrade)) {
			return false;
		}

		PayGrade payGrade = (PayGrade)obj;

		long primaryKey = payGrade.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		PayGradeModelImpl payGradeModelImpl = this;

		payGradeModelImpl._originalGroupId = payGradeModelImpl._groupId;

		payGradeModelImpl._setOriginalGroupId = false;

		payGradeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PayGrade> toCacheModel() {
		PayGradeCacheModel payGradeCacheModel = new PayGradeCacheModel();

		payGradeCacheModel.payGradeId = getPayGradeId();

		payGradeCacheModel.companyId = getCompanyId();

		payGradeCacheModel.groupId = getGroupId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			payGradeCacheModel.createDate = createDate.getTime();
		}
		else {
			payGradeCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			payGradeCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			payGradeCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		payGradeCacheModel.userId = getUserId();

		payGradeCacheModel.payGradeName = getPayGradeName();

		String payGradeName = payGradeCacheModel.payGradeName;

		if ((payGradeName != null) && (payGradeName.length() == 0)) {
			payGradeCacheModel.payGradeName = null;
		}

		return payGradeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{payGradeId=");
		sb.append(getPayGradeId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", payGradeName=");
		sb.append(getPayGradeName());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.rknowsys.eapp.hrm.model.PayGrade");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>payGradeId</column-name><column-value><![CDATA[");
		sb.append(getPayGradeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>payGradeName</column-name><column-value><![CDATA[");
		sb.append(getPayGradeName());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PayGrade.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			PayGrade.class
		};
	private long _payGradeId;
	private long _companyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _userId;
	private String _userUuid;
	private String _payGradeName;
	private long _columnBitmask;
	private PayGrade _escapedModel;
}