/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rknowsys.eapp.hrm.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rknowsys.eapp.hrm.model.EmpEducation;
import com.rknowsys.eapp.hrm.model.EmpEducationModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the EmpEducation service. Represents a row in the &quot;emp_education&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rknowsys.eapp.hrm.model.EmpEducationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmpEducationImpl}.
 * </p>
 *
 * @author rknowsys
 * @see EmpEducationImpl
 * @see com.rknowsys.eapp.hrm.model.EmpEducation
 * @see com.rknowsys.eapp.hrm.model.EmpEducationModel
 * @generated
 */
public class EmpEducationModelImpl extends BaseModelImpl<EmpEducation>
	implements EmpEducationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a emp education model instance should use the {@link com.rknowsys.eapp.hrm.model.EmpEducation} interface instead.
	 */
	public static final String TABLE_NAME = "emp_education";
	public static final Object[][] TABLE_COLUMNS = {
			{ "empEducationId", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "userId", Types.BIGINT },
			{ "educationId", Types.BIGINT },
			{ "institute", Types.VARCHAR },
			{ "major", Types.VARCHAR },
			{ "year", Types.VARCHAR },
			{ "startDate", Types.TIMESTAMP },
			{ "endDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table emp_education (empEducationId LONG not null primary key,employeeId LONG,groupId LONG,companyId LONG,createDate DATE null,modifiedDate DATE null,userId LONG,educationId LONG,institute VARCHAR(75) null,major VARCHAR(75) null,year VARCHAR(75) null,startDate DATE null,endDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table emp_education";
	public static final String ORDER_BY_JPQL = " ORDER BY empEducation.empEducationId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY emp_education.empEducationId ASC";
	public static final String DATA_SOURCE = "hrmDataSource";
	public static final String SESSION_FACTORY = "hrmSessionFactory";
	public static final String TX_MANAGER = "hrmTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rknowsys.eapp.hrm.model.EmpEducation"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rknowsys.eapp.hrm.model.EmpEducation"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.rknowsys.eapp.hrm.model.EmpEducation"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long EMPEDUCATIONID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rknowsys.eapp.hrm.model.EmpEducation"));

	public EmpEducationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _empEducationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmpEducationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _empEducationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EmpEducation.class;
	}

	@Override
	public String getModelClassName() {
		return EmpEducation.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("empEducationId", getEmpEducationId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("userId", getUserId());
		attributes.put("educationId", getEducationId());
		attributes.put("institute", getInstitute());
		attributes.put("major", getMajor());
		attributes.put("year", getYear());
		attributes.put("startDate", getStartDate());
		attributes.put("endDate", getEndDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long empEducationId = (Long)attributes.get("empEducationId");

		if (empEducationId != null) {
			setEmpEducationId(empEducationId);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long educationId = (Long)attributes.get("educationId");

		if (educationId != null) {
			setEducationId(educationId);
		}

		String institute = (String)attributes.get("institute");

		if (institute != null) {
			setInstitute(institute);
		}

		String major = (String)attributes.get("major");

		if (major != null) {
			setMajor(major);
		}

		String year = (String)attributes.get("year");

		if (year != null) {
			setYear(year);
		}

		Date startDate = (Date)attributes.get("startDate");

		if (startDate != null) {
			setStartDate(startDate);
		}

		Date endDate = (Date)attributes.get("endDate");

		if (endDate != null) {
			setEndDate(endDate);
		}
	}

	@Override
	public long getEmpEducationId() {
		return _empEducationId;
	}

	@Override
	public void setEmpEducationId(long empEducationId) {
		_empEducationId = empEducationId;
	}

	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_employeeId = employeeId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public long getEducationId() {
		return _educationId;
	}

	@Override
	public void setEducationId(long educationId) {
		_educationId = educationId;
	}

	@Override
	public String getInstitute() {
		if (_institute == null) {
			return StringPool.BLANK;
		}
		else {
			return _institute;
		}
	}

	@Override
	public void setInstitute(String institute) {
		_institute = institute;
	}

	@Override
	public String getMajor() {
		if (_major == null) {
			return StringPool.BLANK;
		}
		else {
			return _major;
		}
	}

	@Override
	public void setMajor(String major) {
		_major = major;
	}

	@Override
	public String getYear() {
		if (_year == null) {
			return StringPool.BLANK;
		}
		else {
			return _year;
		}
	}

	@Override
	public void setYear(String year) {
		_year = year;
	}

	@Override
	public Date getStartDate() {
		return _startDate;
	}

	@Override
	public void setStartDate(Date startDate) {
		_startDate = startDate;
	}

	@Override
	public Date getEndDate() {
		return _endDate;
	}

	@Override
	public void setEndDate(Date endDate) {
		_endDate = endDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			EmpEducation.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EmpEducation toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EmpEducation)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EmpEducationImpl empEducationImpl = new EmpEducationImpl();

		empEducationImpl.setEmpEducationId(getEmpEducationId());
		empEducationImpl.setEmployeeId(getEmployeeId());
		empEducationImpl.setGroupId(getGroupId());
		empEducationImpl.setCompanyId(getCompanyId());
		empEducationImpl.setCreateDate(getCreateDate());
		empEducationImpl.setModifiedDate(getModifiedDate());
		empEducationImpl.setUserId(getUserId());
		empEducationImpl.setEducationId(getEducationId());
		empEducationImpl.setInstitute(getInstitute());
		empEducationImpl.setMajor(getMajor());
		empEducationImpl.setYear(getYear());
		empEducationImpl.setStartDate(getStartDate());
		empEducationImpl.setEndDate(getEndDate());

		empEducationImpl.resetOriginalValues();

		return empEducationImpl;
	}

	@Override
	public int compareTo(EmpEducation empEducation) {
		long primaryKey = empEducation.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EmpEducation)) {
			return false;
		}

		EmpEducation empEducation = (EmpEducation)obj;

		long primaryKey = empEducation.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EmpEducationModelImpl empEducationModelImpl = this;

		empEducationModelImpl._originalGroupId = empEducationModelImpl._groupId;

		empEducationModelImpl._setOriginalGroupId = false;

		empEducationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EmpEducation> toCacheModel() {
		EmpEducationCacheModel empEducationCacheModel = new EmpEducationCacheModel();

		empEducationCacheModel.empEducationId = getEmpEducationId();

		empEducationCacheModel.employeeId = getEmployeeId();

		empEducationCacheModel.groupId = getGroupId();

		empEducationCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			empEducationCacheModel.createDate = createDate.getTime();
		}
		else {
			empEducationCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			empEducationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			empEducationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		empEducationCacheModel.userId = getUserId();

		empEducationCacheModel.educationId = getEducationId();

		empEducationCacheModel.institute = getInstitute();

		String institute = empEducationCacheModel.institute;

		if ((institute != null) && (institute.length() == 0)) {
			empEducationCacheModel.institute = null;
		}

		empEducationCacheModel.major = getMajor();

		String major = empEducationCacheModel.major;

		if ((major != null) && (major.length() == 0)) {
			empEducationCacheModel.major = null;
		}

		empEducationCacheModel.year = getYear();

		String year = empEducationCacheModel.year;

		if ((year != null) && (year.length() == 0)) {
			empEducationCacheModel.year = null;
		}

		Date startDate = getStartDate();

		if (startDate != null) {
			empEducationCacheModel.startDate = startDate.getTime();
		}
		else {
			empEducationCacheModel.startDate = Long.MIN_VALUE;
		}

		Date endDate = getEndDate();

		if (endDate != null) {
			empEducationCacheModel.endDate = endDate.getTime();
		}
		else {
			empEducationCacheModel.endDate = Long.MIN_VALUE;
		}

		return empEducationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{empEducationId=");
		sb.append(getEmpEducationId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", educationId=");
		sb.append(getEducationId());
		sb.append(", institute=");
		sb.append(getInstitute());
		sb.append(", major=");
		sb.append(getMajor());
		sb.append(", year=");
		sb.append(getYear());
		sb.append(", startDate=");
		sb.append(getStartDate());
		sb.append(", endDate=");
		sb.append(getEndDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.rknowsys.eapp.hrm.model.EmpEducation");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>empEducationId</column-name><column-value><![CDATA[");
		sb.append(getEmpEducationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>educationId</column-name><column-value><![CDATA[");
		sb.append(getEducationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>institute</column-name><column-value><![CDATA[");
		sb.append(getInstitute());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>major</column-name><column-value><![CDATA[");
		sb.append(getMajor());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>year</column-name><column-value><![CDATA[");
		sb.append(getYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDate</column-name><column-value><![CDATA[");
		sb.append(getStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endDate</column-name><column-value><![CDATA[");
		sb.append(getEndDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EmpEducation.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EmpEducation.class
		};
	private long _empEducationId;
	private long _employeeId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _userId;
	private String _userUuid;
	private long _educationId;
	private String _institute;
	private String _major;
	private String _year;
	private Date _startDate;
	private Date _endDate;
	private long _columnBitmask;
	private EmpEducation _escapedModel;
}